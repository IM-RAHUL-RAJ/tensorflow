# -*- coding: utf-8 -*-
"""tensorflow_basics

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WiYWEDKjLkT0gK7lDPY0g1GFtqxAZ-eh
"""

import tensorflow as tf

"""**tensor basics**"""

#initialization of tesnsors
x=tf.constant(4)
print(x)

x=tf.constant(4,shape=(1,1),dtype=tf.float32)
x=tf.constant([[1,2,3],[4,5,6]])

print(x)

x=tf.ones((3,3))

# x=tf.zeros((2,3))

x

x=tf.random.normal((3,3), mean=0,stddev=1)

x

y=tf.eye(3)  #identity matrix

y

z=tf.random.normal((3,3), mean=0,stddev=1)  #standard distributiuon

z

x=tf.random.uniform((1,3), minval=0, maxval=4)
x  #random distribution

x=tf.range(8)
x

x=tf.range(start=1, limit=20,delta=3)

x

x=tf.cast(x,dtype=tf.float64)

x

x=tf.constant([1,2,3])
y=tf.constant([3,4,5])
z=tf.add(x,y)
z

z=x+y

z

z=tf.divide(x,y)

z

z=tf.tensordot(x,y,axes=1)  #dot product

z

#matrix multiplication
x=tf.random.normal((2,3))
y=tf.random.normal((3,4))
z=tf.matmul(x,y)
#both are equivalent can do any one of these
z=x@y
z

x=tf.constant([0,1,2,3,4,5,4,2,1,1])
x[:]

x[::2]

x[::-1]

indices=tf.constant([0,3])
x_ind=tf.gather(x,indices)

x_ind

#reshaping

x=tf.range(9)
x=tf.reshape(x,(1,9))

print(x)

#create two random(but the same)tensors
random1=tf.random.Generator.from_seed(42) #set seed for reproductibility
random1=random1.normal(shape=(3,2))
random2=tf.random.Generator.from_seed(42)
random2=random2.normal(shape=(3,2))

random1,random2
#change seed to change values

random1==random2

#create two random(but not the same)tensors
random1=tf.random.Generator.from_seed(42) #set seed for reproductibility
random1=random1.normal(shape=(3,2))
random2=tf.random.Generator.from_seed(7)
random2=random2.normal(shape=(3,2))

random1,random2
#change seed to change values
random1==random2

#shuffle the order of elements in a tensor
#so that machine learns better and learn both type of imaghes at the same time
not_shuffled=tf.constant([[10,7],
                           [3,4],
                           [6,7]])

not_shuffled

#shuffling data

tf.random.shuffle(not_shuffled,seed=42)

tf.random.set_seed(42)
tf.random.shuffle(not_shuffled,seed=42)
 # its fixed now

